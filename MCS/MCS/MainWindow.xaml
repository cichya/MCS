<Window x:Class="MCS.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MCS.Helpers"
		xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
		xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
		xmlns:converters="clr-namespace:MCS.Converters"
		xmlns:l="clr-namespace:MCS.Languages"
        mc:Ignorable="d"
        Title="{x:Static l:Lang.MainWindowTitleLabel}" Height="450" Width="800"
		DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
	<Window.Resources>
		<ResourceDictionary>
			<converters:DataGridCellEditEndingEventArgsToPersonForListDtoConverter x:Key="DataGridCellEditEndingEventArgsToPersonForListDtoConverter"/>
			<converters:BoolToDeleteButtonContentConverter x:Key="BoolToDeleteButtonContentConverter"/>
			<BitmapImage x:Key="ErrorImageResource" UriSource="./Static/error.png" />
			<Style x:Key="NewPersonDataGridRow" TargetType="{x:Type DataGridRow}">
				<Setter Property="BorderBrush" Value="Green" />
				<Setter Property="BorderThickness" Value="1" />
			</Style>
		</ResourceDictionary>
	</Window.Resources>

	<ScrollViewer>
		<StackPanel Margin="10,10,10,10">
			<DataGrid x:Name="PeopleDataGrid" ItemsSource="{Binding People}" MinHeight="255" AutoGenerateColumns="False" CanUserAddRows="False" >
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="CellEditEnding">
						<cmd:EventToCommand PassEventArgsToCommand="True" Command="{Binding EditPersonRowCommand}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<DataGrid.RowStyle>
					<Style TargetType="{x:Type DataGridRow}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsNew}"
                                 Value="True">
								<Setter Property="Background" Value="Green" />
							</DataTrigger>
							<DataTrigger Binding="{Binding IsEdited}"
                                 Value="True">
								<Setter Property="Background" Value="Blue" />
							</DataTrigger>
							<DataTrigger Binding="{Binding IsDeleted}"
                                 Value="True">
								<Setter Property="Background" Value="Red" />
							</DataTrigger>
							<!--<Trigger Property="Validation.HasError" Value="true">
							<Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)[0].ErrorContent}"/>
						</Trigger>-->
						</Style.Triggers>
						<!--<Setter Property="ValidationErrorTemplate">
						<Setter.Value>
							<ControlTemplate>
								<Image Source="{StaticResource ErrorImageResource}"
									ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}"
									Margin="0"
									Width="11" Height="11" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>-->
					</Style>
				</DataGrid.RowStyle>
				<DataGrid.RowValidationErrorTemplate>
					<ControlTemplate>
						<TextBlock Text=""></TextBlock>
					</ControlTemplate>
				</DataGrid.RowValidationErrorTemplate>
				<DataGrid.Columns>
					<DataGridTextColumn Binding="{Binding Id}" Width="auto" IsReadOnly="True"/>
					<DataGridTextColumn Header="{x:Static l:Lang.FirstNameHeaderDataGridLabel}" Binding="{Binding FirstName, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" Width="*">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="{x:Static l:Lang.LastNameHeaderDataGridLabel}" Binding="{Binding LastName, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" Width="*">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="{x:Static l:Lang.StreetNameHeaderDataGridLabel}" Binding="{Binding StreetName, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" Width="*">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="{x:Static l:Lang.HouseNumberHeaderDataGridLabel}" Binding="{Binding HouseNumber, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" Width="*">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="{x:Static l:Lang.ApartmentNumberHeaderDataGridLabel}" Binding="{Binding ApartmentNumber}" Width="auto"/>
					<DataGridTextColumn Header="{x:Static l:Lang.PostalCodeHeaderDataGridLabel}" Binding="{Binding PostalCode, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" Width="*">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="{x:Static l:Lang.PhoneNumberHeaderDataGridLabel}" Binding="{Binding PhoneNumber, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" Width="*">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTemplateColumn Header="{x:Static l:Lang.BirthDateHeaderDataGridLabel}" Width="*">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding BirthDate, StringFormat=dd-MM-yyyy, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" />
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
						<DataGridTemplateColumn.CellEditingTemplate>
							<DataTemplate>
								<DatePicker SelectedDate="{Binding BirthDate, StringFormat=dd-MM-yyyy}" />
							</DataTemplate>
						</DataGridTemplateColumn.CellEditingTemplate>
					</DataGridTemplateColumn>
					<DataGridTextColumn Header="{x:Static l:Lang.AgeHeaderDataGridLabel}" Binding="{Binding Age}" IsReadOnly="True" Width="*" />
					<DataGridTemplateColumn>
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Button Content="{Binding IsDeleted, Converter={StaticResource BoolToDeleteButtonContentConverter}}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.DeletePersonRowCommand}" CommandParameter="{Binding Id}" />
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>
			</DataGrid>
			<Grid Margin="20,20,20,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Button Grid.Column="0" Margin="0,0,10,0" Command="{Binding AddNewPersonRowCommand}" Content="{x:Static l:Lang.AddNewPersonButtonLabel}" />
				<Button Grid.Column="1" Margin="10,0,10,0" Command="{Binding SaveChangesCommand}" Content="{x:Static l:Lang.SaveButtonLabel}" IsEnabled="{Binding IsValid}" />
				<Button Grid.Column="2" Margin="10,0,0,0" Command="{Binding DiscardChangesCommand}" Content="{x:Static l:Lang.Cancel}" IsEnabled="{Binding DiscardChangesButtonIsEnabled}" />
			</Grid>
		</StackPanel>
	</ScrollViewer>
</Window>
